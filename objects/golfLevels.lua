--[[
	golfLevels.lua 
	Created by Tristan Davis 11/11/17

	This file will hold all the level data for the various golf levels to be implemented
	in the cat berry greens.

	Important functions:
	getLevel(level, debug)
		(required)	level - an integer number determing which level to load
		(optional)  debug - either "hybrid" or "debug", it sets the physics draw mode.
]]
local obj = {}
--[[ ALways set these at the end of the level init!!!
	obj.background;
	obj.hole;
	]]
---------------------- Golf ball stuff -------------------------------------------
------------- golf ball stuff ----------------
obj.ball = display.newCircle(360,640, 15) -- Default golf ball
obj.ball:setFillColor(.5,.5,.5) -- Default golf ball color
local function setBall(x, y, dens, fri, bnc, damp)
	obj.ball.x = x;
	obj.ball.y = y;
	physics.addBody(obj.ball, "dynamic",{ density = (dens or 1), friction = (fri or .2), bounce = (bnc or .2), radius = 15})
	obj.ball.angularDamping = (damp or .4);
end
--[[
	DEMO CODE
local function initLevel1()

	------------------- FOLLOWING CODE GENERATED BY GUMBO -------------------------------
		--display.setStatusBar( display.HiddenStatusBar ) Unnecessary to set.
		local physics = require( "physics" )
		physics.start()
		----physics.setDrawMode( "hybrid" )
		--physics.setDrawMode( "debug" )

		---------------------------
		-- Shapes
		---------------------------
		local walls1 = { -163,-637, -53,-546, 6,-402, 1,-122, -101,210, -228,402, -356,502 }
		walls1.density = 1; walls1.friction = 0.3; walls1.bounce = 0.2; 

		local walls2 = { -163,-639, -162,-629, 357,-614, 356,-636 }
		walls2.density = 1; walls2.friction = 0.3; walls2.bounce = 0.2; 

		local walls3 = { 336,-616, 354,-613, 349,-417, 332,-416 }
		walls3.density = 1; walls3.friction = 0.3; walls3.bounce = 0.2; 

		local walls4 = { 328,-419, 176,-272, 137,-61, 122,262, 186,447, 266,542, 349,594, 348,636 }
		walls4.density = 1; walls4.friction = 0.3; walls4.bounce = 0.2; 

		local walls5 = { -358,502, -349,502, -339,636, -354,636 }
		walls5.density = 1; walls5.friction = 0.3; walls5.bounce = 0.2; 

		local walls6 = { -339,633, -341,615, 346,624, 346,634 }
		walls6.density = 1; walls6.friction = 0.3; walls6.bounce = 0.2; 


		local mainBG = display.newImageRect( "demoGolf.png", 720, 1280 )
		mainBG.x = 360
		mainBG.y = 640
		physics.addBody( mainBG, "static", 
		    {density=walls1.density, friction=walls1.friction, bounce=walls1.bounce, shape=walls1},
		    {density=walls2.density, friction=walls2.friction, bounce=walls2.bounce, shape=walls2},
		    {density=walls3.density, friction=walls3.friction, bounce=walls3.bounce, shape=walls3},
		    {density=walls4.density, friction=walls4.friction, bounce=walls4.bounce, shape=walls4},
		    {density=walls5.density, friction=walls5.friction, bounce=walls5.bounce, shape=walls5},
		    {density=walls6.density, friction=walls6.friction, bounce=walls6.bounce, shape=walls6}
		)

		local hole = display.newImageRect( "invisible.png", 57, 57 )
		hole.x = 518
		hole.y = 84
		physics.addBody( hole, "static", { density=1, friction=0.3, bounce=0.2, radius=10 } )
		hole.isSensor = true
		------- END GENERATED CODE ----------------------------------------------
		setBall(360, 1200) -- Manually set where the ball starts.
		-- The following are to allow access to the objects created via gumbo
		obj.hole = hole;
		obj.background = mainBG;
	end
	]]

--------------- Most of the level code is generated by Gumbo. -----------------
local function initLevel1()
	display.setStatusBar( display.HiddenStatusBar )

	local physics = require( "physics" )
	physics.start()
	--physics.setDrawMode( "hybrid" )
	--physics.setDrawMode( "debug" )

	---------------------------
	-- Shapes
	---------------------------
	local shape_1 = { -332,637, -334,497, -355,478 }
	shape_1.density = 1; shape_1.friction = 0.3; shape_1.bounce = 0.2; 

	local shape_3 = { -336,495, -244,384, -178,222, -151,84, -160,-78, -180,-209, -237,-403, -320,-516 }
	shape_3.density = 1; shape_3.friction = 0.3; shape_3.bounce = 0.2; 

	local shape_4 = { -319,-515, -334,-636, -320,-638 }
	shape_4.density = 1; shape_4.friction = 0.3; shape_4.bounce = 0.2; 

	local top = { -320,-626, 351,-616, 350,-637, -307,-638 }
	top.density = 1; top.friction = 0.3; top.bounce = 0.2; 

	local shape_5 = { 346,-615, 357,-503, 348,-507 }
	shape_5.density = 1; shape_5.friction = 0.3; shape_5.bounce = 0.2; 

	local topright = { 345,-506, 172,-439, 85,-341, 30,-224, 6,-129, 5,-39, 18,74, 66,186 }
	topright.density = 1; topright.friction = 0.3; topright.bounce = 0.2; 

	local shape_7 = { 66,188, 153,327, 225,411, 281,458, 340,477, 356,476, 351,211 }
	shape_7.density = 1; shape_7.friction = 0.3; shape_7.bounce = 0.2; 

	local shape_8 = { 341,480, 343,637, 354,484, 354,637 }
	shape_8.density = 1; shape_8.friction = 0.3; shape_8.bounce = 0.2; 

	local shape_9 = { 337,474, 358,634, 343,634, 342,616 }
	shape_9.density = 1; shape_9.friction = 0.3; shape_9.bounce = 0.2; 

	local bottomwall = { 342,623, -336,610, -338,632 }
	bottomwall.density = 1; bottomwall.friction = 0.3; bottomwall.bounce = 0.2; 


	local mainBG = display.newImageRect( "golf-l1.png", 720, 1280 )
	mainBG.x = 360
	mainBG.y = 640
	physics.addBody( mainBG, "static", 
	    {density=shape_1.density, friction=shape_1.friction, bounce=shape_1.bounce, shape=shape_1},
	    {density=shape_3.density, friction=shape_3.friction, bounce=shape_3.bounce, shape=shape_3},
	    {density=shape_4.density, friction=shape_4.friction, bounce=shape_4.bounce, shape=shape_4},
	    {density=top.density, friction=top.friction, bounce=top.bounce, shape=top},
	    {density=shape_5.density, friction=shape_5.friction, bounce=shape_5.bounce, shape=shape_5},
	    {density=topright.density, friction=topright.friction, bounce=topright.bounce, shape=topright},
	    {density=shape_7.density, friction=shape_7.friction, bounce=shape_7.bounce, shape=shape_7},
	    {density=shape_9.density, friction=shape_9.friction, bounce=shape_9.bounce, shape=shape_9},
	    {density=bottomwall.density, friction=bottomwall.friction, bounce=bottomwall.bounce, shape=bottomwall}
	)

	local hole = display.newImageRect( "hole.png", 50, 50 )
	hole.x = 597
	hole.y = 85

	--- the following was not auto generated.
	setBall(360,1200);
	obj.hole = hole;
	obj.background = mainBG;

end






----------------------- This function will do the fetching of the various levels. ---------------
local function getLevel(level, debug)
	--set up physics
	local physics = require("physics")
	physics.start()
	physics.setGravity(0,0)
	-- If debug mode set
	if(debug == "hybrid" or debug == "debug") then
		physics.setDrawMode(debug)
	end

	if(level == 1) then
		initLevel1();
	else
		print("Invalid level entered.");
	end
end

	--- Add the init object to the object
	obj.getLevel = getLevel;
return obj