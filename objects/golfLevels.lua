--[[
	golfLevels.lua 
	Created by Tristan Davis 11/11/17

	This file will hold all the level data for the various golf levels to be implemented
	in the cat berry greens.

	Important functions:
	getLevel(level, debug)
		(required)	level - an integer number determing which level to load
		(optional)  debug - either "hybrid" or "debug", it sets the physics draw mode.
]]
local obj = {}
--[[ ALways set these at the end of the level init!!!
	obj.background;
	obj.hole;
	]]
---------------------- Golf ball stuff -------------------------------------------
------------- golf ball stuff ----------------
obj.ball = display.newCircle(360,640, 30) -- Default golf ball
obj.ball:setFillColor(1,1,1) -- Default golf ball color
local function setBall(x, y, dens, fri, bnc, damp)
	obj.ball.x = x;
	obj.ball.y = y;
	physics.addBody(obj.ball, "dynamic",{ density = (dens or 1), friction = (fri or .2), bounce = (bnc or .5)})
	obj.ball.angularDamping = (damp or .4);
	obj.ball.linearDamping = (damp or .4)
end


local function initLevel1()

	------------------- FOLLOWING CODE GENERATED BY GUMBO -------------------------------
		--display.setStatusBar( display.HiddenStatusBar ) Unnecessary to set.
		local physics = require( "physics" )
		physics.start()
		----physics.setDrawMode( "hybrid" )
		--physics.setDrawMode( "debug" )

		---------------------------
		-- Shapes
		---------------------------
		local walls1 = { -163,-637, -53,-546, 6,-402, 1,-122, -101,210, -228,402, -356,502 }
		walls1.density = 1; walls1.friction = 0.3; walls1.bounce = 0.2; 

		local walls2 = { -163,-639, -162,-629, 357,-614, 356,-636 }
		walls2.density = 1; walls2.friction = 0.3; walls2.bounce = 0.2; 

		local walls3 = { 336,-616, 354,-613, 349,-417, 332,-416 }
		walls3.density = 1; walls3.friction = 0.3; walls3.bounce = 0.2; 

		local walls4 = { 328,-419, 176,-272, 137,-61, 122,262, 186,447, 266,542, 349,594, 348,636 }
		walls4.density = 1; walls4.friction = 0.3; walls4.bounce = 0.2; 

		local walls5 = { -358,502, -349,502, -339,636, -354,636 }
		walls5.density = 1; walls5.friction = 0.3; walls5.bounce = 0.2; 

		local walls6 = { -339,633, -341,615, 346,624, 346,634 }
		walls6.density = 1; walls6.friction = 0.3; walls6.bounce = 0.2; 


		local mainBG = display.newImageRect( "demoGolf.png", 720, 1280 )
		mainBG.x = 360
		mainBG.y = 640
		physics.addBody( mainBG, "static", 
		    {density=walls1.density, friction=walls1.friction, bounce=walls1.bounce, shape=walls1},
		    {density=walls2.density, friction=walls2.friction, bounce=walls2.bounce, shape=walls2},
		    {density=walls3.density, friction=walls3.friction, bounce=walls3.bounce, shape=walls3},
		    {density=walls4.density, friction=walls4.friction, bounce=walls4.bounce, shape=walls4},
		    {density=walls5.density, friction=walls5.friction, bounce=walls5.bounce, shape=walls5},
		    {density=walls6.density, friction=walls6.friction, bounce=walls6.bounce, shape=walls6}
		)

		local hole = display.newImageRect( "invisible.png", 57, 57 )
		hole.x = 518
		hole.y = 84
		physics.addBody( hole, "static", { density=1, friction=0.3, bounce=0.2, radius=10 } )
		hole.isSensor = true
		------- END GENERATED CODE ----------------------------------------------
		setBall(360, 1200) -- Manually set where the ball starts.
		-- The following are to allow access to the objects created via gumbo
		obj.hole = hole;
		obj.background = mainBG;
	end

----------------------- This function will do the fetching of the various levels. ---------------
local function getLevel(level, debug)
	--set up physics
	local physics = require("physics")
	physics.start()
	physics.setGravity(0,0)
	-- If debug mode set
	if(debug == "hybrid" or debug == "debug") then
		physics.setDrawMode(debug)
	end

	if(level == 1) then
		initLevel1();
	else
		print("Invalid level entered.");
	end
end

	--- Add the init object to the object
	obj.getLevel = getLevel;
return obj